I"f
<h3 id="brief-introduction">Brief Introduction</h3>
<blockquote>
  <ul>
    <li>What is Django ?</li>
  </ul>
</blockquote>

<p>Django is a high-level Python web framework that enables rapid development of secure and maintainable websites.</p>
<blockquote>
  <ul>
    <li>Why Django ?</li>
  </ul>
</blockquote>

<p>Django helps you write software that is :</p>
<ul>
  <li>Complete</li>
  <li>Versatile</li>
  <li>Secure</li>
  <li>Scalable</li>
  <li>Maintainable</li>
  <li>Portable</li>
</ul>

<h3 id="hello-world--project">“Hello World !” Project</h3>
<p>Building a ‘Hello World’ example in a new language or framework is a common first project.
(I will assume that you have Django installed. If not, follow this <a href="https://docs.djangoproject.com/en/3.1/topics/install/">link.</a>)</p>

<hr />

<pre><code class="language-python">import sys
from django.http import HttpResponse
from django.conf.urls import url 
from django.conf import settings



# Creating The View
# Django is referred to as a model-template-view (MTV) framework. The view portion typically inspects the incoming HTTP request and queries, ir constructs, the necessary data to send to the presentation layer. 
def index(request):
    return HttpResponse('Hello World')


# URL Patterns
# In order to tie our view into the site's structure, we'll need to associate it with a URL pattern.
urlpatterns = (
    url(r'^$', index), 
)



# Configuration 
# Django settings detail everything from database and cache connections to internationalization features and static and uploaded resources.

settings.configure(
    DEBUG=True, # Debugging mode
    SECRET_kEY='THISISTHESECRETKEY', # Secret key must be generated for the default session and cross-site request forgery (CSRF) protection. 
    ROOT_URLCONF=__name__, 
    MIDDLEWARE_CLASSES=(
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ),
)


if __name__ == "__main__":
    from django.core.management import execute_from_command_line

    execute_from_command_line(sys.argv)
</code></pre>

<hr />

<p>Now we can start the example in the command line:</p>
<hr />

<pre><code class="language-bash">hostname $ python hello.py runserver
Performing system checks...

System check identified no issues (0 silenced).
October 31, 2020 - 18:21:44
Django version 1.11.23, using settings None
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.
</code></pre>
<p><img src="/assets/images/Django/hello_localhost.png" alt="Hello World" title="hello_localhost" /></p>
<hr />

:ET