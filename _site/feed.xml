<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2021-07-17T13:04:53+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Seif-Allah’s Blog</title><subtitle>“A person who is only educated by others is an uneducated person; without self-education, you will not be able to get an education in the strict sense of the word.”</subtitle><author><name>Seif-Allah Homrani</name><email>seif.allah.homrani@gmail.com</email></author><entry><title type="html">Networking - Software Defined Network (University Project)</title><link href="http://localhost:4000/SDN/" rel="alternate" type="text/html" title="Networking - Software Defined Network (University Project)" /><published>2021-03-15T00:00:00+01:00</published><updated>2021-03-15T00:00:00+01:00</updated><id>http://localhost:4000/SDN</id><content type="html" xml:base="http://localhost:4000/SDN/">&lt;h2 id=&quot;why-sdn&quot;&gt;Why SDN&lt;/h2&gt;

&lt;p&gt;“Software-Defined Networking (SDN)” is a term of the programmable networks paradigm. (A paradigm is a standard, perspective, or set of ideas.)&lt;/p&gt;

&lt;p&gt;In short, SDN refers to the ability of software applications to program individual network devices dynamically and therefore control the behavior of the network as a whole.&lt;/p&gt;

&lt;p&gt;SDN separates the network’s control (brains) and forwarding (muscle) planes and provides a centralized view of the distributed network for more efficient orchestration and automation of network services.&lt;/p&gt;

&lt;p&gt;The SDN architecture is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Directly programmable: Network control is directly programmable because it is decoupled from forwarding functions.&lt;/li&gt;
  &lt;li&gt;Agile: Abstracting control from forwarding lets administrators dynamically adjust network-wide &lt;a href=&quot;https://en.wikipedia.org/wiki/Traffic_flow_(computer_networking)&quot;&gt;traffic flow&lt;/a&gt; to meet changing needs.&lt;/li&gt;
  &lt;li&gt;Centrally managed: Network intelligence is (logically) centralized in software-based SDN controllers that maintain a global view of the network, which appears to applications and policy engines as a single, logical switch.&lt;/li&gt;
  &lt;li&gt;Programmatically configured: SDN lets network managers configure, manage, secure, and optimize network resources very quickly via dynamic, automated SDN programs, which they can write themselves because the programs do not depend on proprietary software.&lt;/li&gt;
  &lt;li&gt;Open standards-based and vendor-neutral: When implemented through open standards, SDN simplifies network design and operation because instructions are provided by SDN controllers instead of multiple, vendor-specific devices and protocols.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/sdn.webp&quot; alt=&quot;sdn&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;sdn-history&quot;&gt;SDN History&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/4Cb91JT-Xb4&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;rest-api&quot;&gt;REST API&lt;/h2&gt;

&lt;p&gt;In case you are not familiar with REST API, check this github repository where I explained what is REST API using a simple flask app : &lt;a href=&quot;https://github.com/seifallahhomrani1/api&quot;&gt;REST API&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;opendaylight-controller&quot;&gt;OpenDaylight Controller&lt;/h2&gt;

&lt;p&gt;The OpenDaylight Project is a collaborative open-source project hosted by The Linux Foundation. The project serves as a platform for software-defined networking (SDN) for open, centralized, network device monitoring.&lt;/p&gt;

&lt;h2 id=&quot;mininet&quot;&gt;Mininet&lt;/h2&gt;

&lt;p&gt;Mininet creates a realistic virtual network, running real kernel, switch and application code, on a single machine (VM, cloud or native), in seconds.&lt;/p&gt;

&lt;p&gt;The script I used to create a personalized network in mininet using python can be found &lt;a href=&quot;script.py&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;using-the-opendaylight-sdn-controller-with-the-mininet&quot;&gt;Using the OpenDaylight SDN Controller with the Mininet&lt;/h2&gt;

&lt;p&gt;In this lab example, I will use two virtual machines. One will run the Mininet emulated network and the other will run the OpenDaylight controller. I will connect both VMs to a host-only network so they can communicate with each other and with programs running on the host computer, such as ssh and the X11 client.&lt;/p&gt;

&lt;p&gt;I will use VirtualBox to run the Mininet VM that I downloaded from the mininet project web site, which is the easiest way to experiment with Mininet. The Mininet project team provides an Ubuntu 14.04 LTS VM image with Mininet 2.2.1, Wireshark and OpenFlow dissector tools already installed and ready to use.&lt;/p&gt;

&lt;p&gt;My setup :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Host : Ubuntu 18.04&lt;/li&gt;
  &lt;li&gt;CPU : Intel i3 5005U&lt;/li&gt;
  &lt;li&gt;RAM : 12 GB&lt;/li&gt;
  &lt;li&gt;Hypervisor : VirtualBox 6&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;setting-up-the-opendaylight-virtual-machine&quot;&gt;Setting up the OpenDaylight Virtual Machine&lt;/h3&gt;

&lt;p&gt;To build the OpenDaylight virtual machine, I downloaded the Ubuntu 18.04 ISO image from the ubuntu.com web site. Then I installed it in a new VM in VirtualBox.&lt;/p&gt;

&lt;p&gt;Give the virtual machine a descriptive name. I named the virtual machine OpenDaylight. Configure it so it uses two CPUs and 2 GB or RAM. This is the minimum configuration to support OpenDaylight. Then add a host-only network adapter to the VM.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/odl.png&quot; alt=&quot;odl&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the VM’s VirtualBox network settings, enable two network interfaces. Connect the first network adapter to the NAT interface (which is the default setting) and the second network adapter to the host-only network, vboxnet0.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/odl_network.png&quot; alt=&quot;odl_network&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: If you don’t have a host-only network enabled, click CTRL+H, this will lead you to the Host network manager, then create a new one and don’t forget to enable the DHCP server.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/odl_network_host.png&quot; alt=&quot;odl_network_host&quot; /&gt;&lt;/p&gt;

&lt;p&gt;List all the devices using th ip addr show command:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/odl_ip.png&quot; alt=&quot;odl_ip&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;connect-to-the-opendaylight-vm-using-ssh&quot;&gt;Connect to the OpenDaylight VM using SSH&lt;/h3&gt;

&lt;p&gt;I like to use a terminal application when working on Virtual Machines. The VirtualBox console window has too many annoying limitations. For example, I cannot cut-and-paste text from my host system onto the VirtualBox console attached to the virtual machine, or vice-versa.&lt;/p&gt;

&lt;p&gt;Open a terminal on host computer and login using SSH:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/odl_ssh.png&quot; alt=&quot;odl_ssh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Optional&lt;/strong&gt; : To enable SSH auto login, I suggest you this &lt;a href=&quot;https://www.linuxbabe.com/linux-server/setup-passwordless-ssh-login&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you are connected to the OpenDaylight virtual machine and can see that the host name in the prompt is changed to is odl, which I configured when installing Ubuntu on the VM.&lt;/p&gt;

&lt;p&gt;I also enabled X forwarding when I started SSH so I can run X programs on the OpenDaylight VM, although we won’t do that in this tutorial.&lt;/p&gt;

&lt;h3 id=&quot;installing-java-and-opendaylight&quot;&gt;Installing Java and OpenDayLight&lt;/h3&gt;

&lt;p&gt;In this lab, we’re gonna use Nitrogen release (0.7.3) since l2switch was removed in Fluorine, so any version before that (Oxygen would be the most recent) should have l2switch. It was removed because the project no longer had an active community.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Run an apt-get update to ensure that your server receives all of the most recent security and application packages.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;c&quot;&gt;# Now, install the following convenience packages, to make life easier.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;unzip vim wget
&lt;span class=&quot;c&quot;&gt;# Run the following command to install the JRE.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;openjdk-8-jre
&lt;span class=&quot;c&quot;&gt;# Now, ensure that Ubuntu points to JAVA 8. Run the following command. If it does not point to JAVA 8, be sure to select version 8 from the list.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-alternatives &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt; java
&lt;span class=&quot;c&quot;&gt;# With the path in hand, run the following command to update your BASHRC file.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.bashrc
&lt;span class=&quot;c&quot;&gt;# Now source your BASHRC file and then check to ensure $JAVA_HOME lives in the environment.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc
&lt;span class=&quot;c&quot;&gt;# Double check that $JAVA_HOME ends with /jre.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Download the OpenDaylight Zip Archive using Wget&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget https://nexus.opendaylight.org/content/repositories/opendaylight.release/org/opendaylight/integration/karaf/0.7.3/karaf-0.7.3.zip
&lt;span class=&quot;c&quot;&gt;# Make a directory for the binary.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; /usr/local/karaf
&lt;span class=&quot;c&quot;&gt;# Move the zip archive to the install workspace&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mv &lt;/span&gt;karaf-0.7.3.zip /usr/local/karaf
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;unzip /usr/local/karaf/karaf-0.8.4.zip &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; /usr/local/karaf/ &lt;span class=&quot;c&quot;&gt;#Unzipping&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Install karaf into user space.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-alternatives &lt;span class=&quot;nt&quot;&gt;--install&lt;/span&gt; /usr/bin/karaf karaf /usr/local/karaf/karaf-0.8.4/bin/karaf 1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-alternatives &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt; karaf
&lt;span class=&quot;c&quot;&gt;# Execute the karaf command via sudo and pass the -E flag to keep the $JAVA_HOME environment variable.   &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; karaf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/odl_karaf.png&quot; alt=&quot;odl_karaf&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Java terminal error troubleshoot ([ERROR] Failed to construct terminal; falling back to unsupported
java.lang.NumberFormatException: For input string: “0x100”) :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TERM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xterm-color
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /.bashrc

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;installing-opendaylight-features&quot;&gt;Installing OpenDayLight features&lt;/h3&gt;

&lt;p&gt;Next, install the minimum set of features required to test OpenDaylight and the OpenDaylight GUI, type this command inside the karaf cli:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;opendaylight-user@root&amp;gt; feature:install odl-restconf odl-l2switch-switch odl-mdsal-apidocs odl-dlux-core odl-dluxapps-nodes odl-dluxapps-topology odl-dluxapps-yangui odl-dluxapps-yangvisualizer odl-dluxapps-yangman
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once installed, these features are permanently added to the controller and will run every time it starts.&lt;/p&gt;

&lt;h2 id=&quot;set-up-the-mininet-virtual-machine&quot;&gt;Set up the Mininet Virtual Machine&lt;/h2&gt;

&lt;p&gt;Start the Mininet VM in the VirtualBox Manager. Now we should have two VMs running: OpenDaylight VM and Mininet VM. If we started the OpenDaylight VM first, it will have IP address 192.168.56.101 and the mininet VM will receive the second available IP address on the host-only network, 192,168.56.102. We can verify this by running the ip command on the Mininet VM console :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/mininet_ip.png&quot; alt=&quot;mininet_ip&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: The Mininet VM is based on Ubuntu Server 14.04, which does not yet use the predictable network interface names like enp0s3 and enp0s8, so we see interface names like eth0 and eth1.&lt;/p&gt;

&lt;h3 id=&quot;connect-to-the-mininet-vm-using-ssh&quot;&gt;Connect to the Mininet VM using SSH&lt;/h3&gt;

&lt;p&gt;Now open a terminal window on your host computer and SSH into the Mininet VM. Turn X forwarding on. (If you are using Windows, use Xming for an X Window System Server and Putty as an SSH client)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/mininet_ssh.png&quot; alt=&quot;mininet_ssh&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;start-mininet&quot;&gt;Start Mininet&lt;/h3&gt;

&lt;p&gt;On the Mininet VM, start a simple network topology. In this case, we will do the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Set up three switches in a linear topology&lt;/li&gt;
  &lt;li&gt;Each switch will be connected to one host&lt;/li&gt;
  &lt;li&gt;The MAC address on each host will be set to a simple number&lt;/li&gt;
  &lt;li&gt;The remote controller, OpenDaylight, is at IP address 192.168.56.101:6633 (We will use OpenFlow version 1.3)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Mininet command to start this is:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mininet@mininet-vm:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mn &lt;span class=&quot;nt&quot;&gt;--topo&lt;/span&gt; linear,3 &lt;span class=&quot;nt&quot;&gt;--mac&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;remote,ip&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.56.101,port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6633 &lt;span class=&quot;nt&quot;&gt;--switch&lt;/span&gt; ovs,protocols&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;OpenFlow13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then test it with &lt;em&gt;pingall&lt;/em&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/mininet_topo.png&quot; alt=&quot;mininet_topo&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-opendaylight-graphical-user-interface&quot;&gt;The OpenDaylight Graphical User Interface&lt;/h3&gt;

&lt;p&gt;Open a browser on your host system and enter the URL of the OpenDaylight User Interface (DLUX UI). It is running on the OpenDaylight VM so the IP address is 192.168.56.102 and the port, defined by the application, is 8181, So the URL is: http://192.168.56.101:8181/index.html&lt;/p&gt;

&lt;p&gt;The default username and password are both admin.&lt;/p&gt;

&lt;p&gt;Now we see the network topology in the OpenDaylight controller’s topology tab.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/networking/dlux.png&quot; alt=&quot;odl_topology&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see the network that is emulated by the Mininet network emulator. You may test OpenDaylight functionality by building different network topologies in Mininet with different attributes, and by using OpenDaylight to run experiments on the emulated network. For example, you may break links between switches in Mininet to test how the network responds to faults.&lt;/p&gt;

&lt;h2 id=&quot;other-resources&quot;&gt;Other Resources&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7426&quot;&gt;RFC 7426&lt;/a&gt;&lt;/p&gt;</content><author><name>Seif-Allah</name></author><category term="Networking" /><category term="Networking" /><summary type="html">Why SDN</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/networking/sdn.png" /><media:content medium="image" url="http://localhost:4000/assets/images/networking/sdn.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Networking - Spanning Tree Protocol</title><link href="http://localhost:4000/STP/" rel="alternate" type="text/html" title="Networking - Spanning Tree Protocol" /><published>2021-01-24T00:00:00+01:00</published><updated>2021-01-24T00:00:00+01:00</updated><id>http://localhost:4000/STP</id><content type="html" xml:base="http://localhost:4000/STP/">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Once upon a time, a company called Digital Equipment Corporation (DEC) was purchased and renamed Compaq. But before that happened, DEC created the original version of &lt;em&gt;Spanning Tree Protocol&lt;/em&gt;, or STP.&lt;/p&gt;

&lt;h3 id=&quot;main-task-of-stp&quot;&gt;Main task of STP&lt;/h3&gt;

&lt;p&gt;STP’s main task is to stop network loops from occurring on your layer 2 network (bridges or switches). It vigilantly monitors the network to find all links, making sure that no loops occur by shutting down any redundant links. STP uses the &lt;em&gt;spanning-tree algorithm&lt;/em&gt; (STA) to first create a topology database and then search out and destroy redundant links. With STP running, frames will be forwarded only on the premium, STP-picked links.&lt;/p&gt;

&lt;h3 id=&quot;spanning-tree-terms&quot;&gt;Spanning Tree Terms&lt;/h3&gt;

&lt;p&gt;Before I get into describing the details of how STP works in the network, you need to understand some basic ideas and terms and how they relate within the layer 2 switched network:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Root bridge&lt;/strong&gt; : The root bridge is the bridge with the best bridge ID. With STP, the key is for all the switches in the network to elect a root bridge that becomes the focal point in the network. All other decisions in the network, such as which port is to be blocked and which port is to be put in forwarding mode, are made from the perspective of this root bridge.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;BPDU&lt;/strong&gt; : All the switches exchange information to use in the selection of the root switch as well as in subsequent configuration of the network. Each switch compares the parameters in the &lt;em&gt;Bridge Protocol Data Unit (BPDU)&lt;/em&gt; that it sends to one neighbor with the one that it receives from another neighbor.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bridge ID&lt;/strong&gt; : The bridge ID is how STP keeps track of all the switches in the network. It is determined by a combination of the bridge priority and the base MAC address. The bridge with the lowest bridge ID becomes the root bridge in the network.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nonroot bridges&lt;/strong&gt; : These are all bridges that are not the root bridge. Nonroot bridges exchange BPDUs with all bridges and update the STP topology database on all switches, preventing loops and providing a measure of defense against link failures.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Port cost&lt;/strong&gt; : Port cost determines the best path when multiple links are used between two switches and none of the links is a root port. The cost of a link is determined by the bandwidth of a link.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Root port&lt;/strong&gt; : The root port is always the link directly connected to the root bridge, or the shortest path to the root bridge. If more than one link connects to root bridge, then a port cost is determined by checking the bandwidth of each link. The lowest-cost port becomes the root port. If multiple links have the same cost, the bridge with the lower advertising bridge ID is used. Since multiple links can be from the same device, the lowest port number will be used.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Designated port&lt;/strong&gt; : A designated port is one that has been determined as having the best (lowest) cost. A designated port will be marked as a forwarding port.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Nondesignated port&lt;/strong&gt; : A nondesignated port is one with a higher cost than the designated port. Nondesignated ports are put in blocking mode - they are not forwarding ports.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Forwarding port&lt;/strong&gt; : A forwarding port forwards frames.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Blocked port&lt;/strong&gt; : A blocked port is the port that, in order to prevent loops, will not forward frames. However, a blocked port will always listen to frames.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;spanning-tree-operations&quot;&gt;Spanning Tree Operations&lt;/h3&gt;

&lt;p&gt;As I’ve said before, STP’s job is to find all links in the network and shut down any redundant ones, thereby preventing network loops from occurring.&lt;/p&gt;

&lt;p&gt;STP accomplishes this by first electing a root bridge that will forward through all ports and act as a point of reference for all other devices in the STP domain. Once all switches agree on who the root bridge is, every bridge must find its one and only allotted root port. Each and every link between two switches must have one, and only one, designated port, the port on that link that provides the highest bandwidth to the root. It’s really important to remember that a bridge can go through many other bridges to get to the root, meaning that it’s not always the shortest path but the fastest (highest bandwidth) path that will be the one used.&lt;/p&gt;

&lt;p&gt;Obviously, every port on the root switch is a designated port, as you can get no closer to the root than being the root.
After the dust settles, any port that is not either root port or a designated port - which means it is a nonroot, nondesignated port - is placed in the blocking state, thus breaking the switching loop.&lt;/p&gt;

&lt;h3 id=&quot;selecting-the-root-bridge&quot;&gt;Selecting the Root Bridge&lt;/h3&gt;

&lt;p&gt;The bridge ID is used to elect the root bridge in the STP domain and to determine the root port for each of the remaining devices in the STP domain. This ID is 8 bytes long and includes both the priority and the MAC address of the device. The default priority on all devices running the IEEE STP version is 32.768.&lt;/p&gt;

&lt;p&gt;To determine the root bridge, you combine the priority of each bridge with its MAC address. If two switches or bridges happen to have the same priority value, the MAC address becomes the tiebreaker for figuring out which one has the lowest (best) ID. It’s like this: If two switches - I’ll name them A and B - Both use the default priority of 32768, then the MAC address will be used instead. Just remember that the lower value is the better one when it comes to electing a root bridge.&lt;/p&gt;

&lt;p&gt;By default, BPDUs are sent every two seconds out all active ports on a bridge/switch - again, the bridge with the lowest bridge ID is elected the root bridge. You can change the bridge’s ID by lowering its priority so that it will become a root bridge automatically.&lt;/p&gt;

&lt;p&gt;Being able to do that is important in a large switched network, it ensures that the best paths are chosen, efficiency is what you’re after here.&lt;/p&gt;

&lt;p&gt;To determine which port STP will shut down, it will first check each link’s amount of bandwidth and then shut down the link with the lowest bandwidth value. If both links have the same bandwidth value, STP will typically shut down the higher of the port numbers.&lt;/p&gt;</content><author><name>Seif-Allah</name></author><category term="Networking" /><summary type="html">Introduction</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/networking/STP.png" /><media:content medium="image" url="http://localhost:4000/assets/images/networking/STP.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Linux - Find Command : Cheat Sheet</title><link href="http://localhost:4000/Find-Command/" rel="alternate" type="text/html" title="Linux - Find Command : Cheat Sheet" /><published>2021-01-19T00:00:00+01:00</published><updated>2021-01-19T00:00:00+01:00</updated><id>http://localhost:4000/Find%20Command</id><content type="html" xml:base="http://localhost:4000/Find-Command/">&lt;script src=&quot;https://gist.github.com/seifallahhomrani1/c3c02887aab8f077690505bfb726d34e.js&quot;&gt;&lt;/script&gt;</content><author><name>Seif-Allah</name></author><category term="Linux" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/linux/find.png" /><media:content medium="image" url="http://localhost:4000/assets/images/linux/find.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Networking - IPv6 (Intro)</title><link href="http://localhost:4000/IPV6/" rel="alternate" type="text/html" title="Networking - IPv6 (Intro)" /><published>2021-01-08T00:00:00+01:00</published><updated>2021-01-08T00:00:00+01:00</updated><id>http://localhost:4000/IPV6</id><content type="html" xml:base="http://localhost:4000/IPV6/">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;IPV6 is the latest version of the internet Protocol, people refer to IPV6 as “the next-generation Internet Protocol” and it was originally created as the answer to IPv4’s inevitable, looming address-exhaustion crisis.&lt;/p&gt;

&lt;p&gt;The IPv6 header and address structure has been completely overhauled, and many of the features that were basically just afterthoughts and addendums in IPv4 are now included as full-blown standards in IPv6. It’s seriously well equiped, poised, and ready to manage the mind-blowing demands of the Internet to come.&lt;/p&gt;

&lt;h3 id=&quot;why-do-we-need-ipv6-&quot;&gt;Why Do We Need IPv6 ?&lt;/h3&gt;

&lt;p&gt;Well, the short answer is, because we need to communicate, and our current system isn’t really cutting it anymore, kind of like how the Pony Express can’t compete with airmail. Just look at how much time and effort we’ve invested in coming up with slick new ways to conserve bandwidth and IP addresses. We’ve even come up with Variable Length Subnet Masks (VLSMs) in our struggle to overcome the worsening address drought.&lt;/p&gt;

&lt;h3 id=&quot;ipv6-addressing-and-expressions&quot;&gt;IPv6 Addressing and Expressions&lt;/h3&gt;

&lt;p&gt;Just as understanding how IP addresses are structured and used is critical with IPv4 addressing, it’s also vital when it comes to IPv6. You’ve already read about the fact that at 128 bits, and IPv6 address is much larger than an IPv4 address.&lt;/p&gt;

&lt;p&gt;Here’s an example of an IPv6 address :&lt;/p&gt;

&lt;p&gt;2001:0db8:3c4d:0012:0000:0000:1234:56ab&lt;/p&gt;

&lt;p&gt;Breaking down this IPv6 address into 3 sections :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Global Prefix&lt;/strong&gt; : 2001:0db8:3c4d&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Subnet&lt;/strong&gt; : 0012&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Interface ID&lt;/strong&gt; : 0000:0000:1234:56ab&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So as you can now see, the address is truly much larger, but what else is different? Well, first, notice that it has eight groups of numbers instead of four and also that those groups are separated by colons instead of periods. And hey wait a second.. There are letters in that address! Yep, the address is expressed in hexadecimal just like a MAC address is, so you could say this address has eight 16-bit hexadecimal colon-delimited blocks. That’s already quite a mouthful, and you probably haven’t even tried to say the address out loud yet!&lt;/p&gt;

&lt;p&gt;One other thing I want to point out us for when you set up your test network to play with IPv6, is when you use a web browser to make an HTTP connection to an IPv6 device, you have to type the address into the browser with brackets [] around the literal address. Why ? Well, a colon is already being used by the browser for specifying a port number. So basically, if you don’t enclose the address in brackets, the browser will have no way to identify the information.&lt;/p&gt;

&lt;h3 id=&quot;shortened-expression&quot;&gt;Shortened Expression&lt;/h3&gt;

&lt;p&gt;The good news is there are a fex tricks to help rescue us when writing these monster addresses. For one thing, you can actually leave out parts of the address to abbreviate it, but to get away with doing that you have to follow a couple of rules.
First, you can drop any leading zeros in each of the individual blocks.&lt;/p&gt;

&lt;p&gt;After you do that, the sample address from earlier would then look like this:&lt;/p&gt;

&lt;p&gt;2001:db8:3c4d:12:0:0:1234:56ab&lt;/p&gt;

&lt;p&gt;Okay, that’s a definite improvement, at least we don’t have to write all of those extra zeros!
But what about whole blocks that don’t have anything in them except zeros? Well, we can kind of lose those too, at least some of them. Again referring to our sample address, we can remove the two blocks of zeros by replacing them with double colons, like this:&lt;/p&gt;

&lt;p&gt;2001:db8:3c4d:12:0:0:1234:56ab&lt;/p&gt;

&lt;p&gt;Cool, we replaced the blocks of all zeros with double colons. The rule you have to follow to get away with this is that &lt;strong&gt;you can only replace one contiguous block of zeros&lt;/strong&gt; in an address. So if my address has four blocks of zeros and each of them were separated, I just don’t get to replace them all; remember the rule is that you can only replace one contiguous block with a double colon. Check out this example :&lt;/p&gt;

&lt;p&gt;2001:0000:0000:0012:0000:1234:56ab&lt;/p&gt;

&lt;p&gt;And just know that &lt;strong&gt;you can’t do this&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;2001::12::1234:56ab&lt;/p&gt;

&lt;p&gt;Instead, this is the best that you can do:&lt;/p&gt;

&lt;p&gt;2001::12:0:0:1234:56ab&lt;/p&gt;

&lt;p&gt;The reason why the above example is our best shot is that if we remove two sets of zeros, the device looking at the address will have no way of knowing where the zeros go back in. Basically, the router would look at the incorrect address and say, “Well, do I place two blocks into the first set of double colons and two into the second st, or do I place three blocks into the first set and one block into the second set?” and on and on it would go because the information the router needs just isn’t there.&lt;/p&gt;

&lt;h3 id=&quot;address-types&quot;&gt;Address Types&lt;/h3&gt;

&lt;p&gt;We’re all familiar with IPv4’s unicast, broadcast, and multicast addresses that basically define who or at least how many other devices we’re talking to. But, the IPv6 adds to that trio and introduces the anycast. Broadcasts, as we know them, have been eliminated in IPv6 because of their cumbersome inefficiency.&lt;/p&gt;

&lt;p&gt;So let’s find out what each of these types of IPv6 addressing and communication methods do for us.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Unicast&lt;/strong&gt; : Packets addressed to a unicast address are delivered to a single interface. For load balancing, multiple interfaces can use the same address. There are a few different types of unicast addresses, but we don’t need to get into here.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Global Unicast Addresses&lt;/strong&gt; These are your typical publicly routable addresses, and they’re the same as they are in IPv4.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Link-Local addresses&lt;/strong&gt; These are like the private addresses in IPv4 in that they’re not meant to be routed. Think of them as a handy tool that gives you the ability to throw a temporary LAN together or for creating a small LAN that’s not going to be routed but still needs to share and access files and services locally.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unique local addresses&lt;/strong&gt; These addresses are also intended for non-routing purposes, but they are nearly globally unique, so it’s unlikely you’ll ever have one of them overlap. Unique local addresses were designed to replace site-local addresses, so they basically do almost exactly what IPv4 private addresses do : allow communication throughout a site while being routable to multiple local networks. Site-local addresses were denounced as of September 2004.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Multicast&lt;/strong&gt; Again, same as in IPv4, packets addresses to a multicast address are delivered to all interfaces identified by the multicast address. Sometimes people call them one-to-many addresses. It’s really easy to spot a multicast address in IPv6 because they always start with FF.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Anycast&lt;/strong&gt; Like multicast addresses, an anycast address identifies multiple interfaces, but there’s a big difference: the any cast packet is only delivered to one address, actually, to the first one it finds defined in terms of routing distance. And again, this address is special because you can apply a single address to more than one interface. You could call them one-to-one-of-many addresses, but just saying “anycast” is a lot easier.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You’re probably wondering if there are any special, reserved addresses in IPv6 because you know they’re in IPv4. Well there are plenty of them ! Let’s go over them now.&lt;/p&gt;

&lt;h3 id=&quot;special-addresses&quot;&gt;Special Addresses&lt;/h3&gt;

&lt;p&gt;I’m going to list some of the addresses and address ranges that you should definitely make a point to remember because you’ll eventually use them. They’re all special or reserved for specific use, but unlike IPv4, IPv6 gives us a galaxy of addresses, so reserving a few here and there doesn’t hurt a thing!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;0:0:0:0:0:0:0:0&lt;/strong&gt; Equals &lt;strong&gt;::&lt;/strong&gt;. This is the equivalent of IPv4’s 0.0.0.0, and is typically the source address of a host when you’re using stateful configuration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;0:0:0:0:0:0:0:1&lt;/strong&gt; Equals &lt;strong&gt;::1&lt;/strong&gt;. The equivalent of 127.0.0.1 in IPv4.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;0:0:0:0:0:0:192.168.100.1&lt;/strong&gt; This is how an IPv4 address would be written in a mixed IPv6/IPv4 network environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2000::/3&lt;/strong&gt; The global unicast address range.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FC00::/7&lt;/strong&gt; The unique local unicast range.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FE80::/10&lt;/strong&gt; The link-local unicast range.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FF00::/8&lt;/strong&gt; The multicast range.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3FFF:FFFF::/32&lt;/strong&gt; Reserved for examples and documentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2001:0DB8::/32&lt;/strong&gt; Also reserved for examples and documentation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2002::/16&lt;/strong&gt; Used with 6to4 , which is the transition system, the structure that allows IPv6 packets to be transmitted over an IPv4 network without the need to configure explicit tunnels.&lt;/p&gt;

&lt;h3 id=&quot;how-ipv6-works-in-an-internetwork&quot;&gt;How IPv6 Works in an InternetWork&lt;/h3&gt;

&lt;p&gt;It’s time to explore the finer points of IPv6. A great place to start is by showing you how to address a host and what gives it the ability to find other hosts and resources on a network.&lt;/p&gt;

&lt;p&gt;I’ll also demonstrate a  device’s ability to automatically address itself, something called stateless autoconfiguration, plus another type of autoconfiguration known as stateful. Keep in mind that stateful autoconfiguration uses a DHCP server in a very similar way to how it’s used in an IPv4 configuration. I’ll also show you how Internet Control Message Protocol (ICMP) and multicast works for us on an IPv6 network.&lt;/p&gt;

&lt;h3 id=&quot;autoconfiguration&quot;&gt;Autoconfiguration&lt;/h3&gt;

&lt;p&gt;Autoconfiguration is an incredibly useful solution because it allows devices on a network to address themselves with a link-local unicast address. This process happens through first learning the prefix information from the router and then appending the device’s own interface address as the interface ID. But where does it get that interface ID? Well, you know every device on an Ethernet network has a physical MAC address, and that’s exactly what’s used for the interface ID. But since the interface ID in an IPv6 is 64 bits length and a MC address is only 48 bits, where do the extra 16 bits come from? The MAC address is &lt;strong&gt;padded&lt;/strong&gt; in the middle with the extra bits, it’s &lt;strong&gt;padded with FFFE&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For example, let’s say I have a device with a MAC address that looks like this: 00:60:d6:79:19:87&lt;/p&gt;

&lt;p&gt;After it’s been padded, it would look like this: 02:60:d6:FF:FE:73:19:87&lt;/p&gt;

&lt;p&gt;So where did that 2 in the beginning of the address come from ? another good question.&lt;/p&gt;

&lt;p&gt;You see, part of the process of padding (called modified eui-644 format) changes a bit to specify if the address is locally unique or globally unique. And the bit that gets changed is the seventh bit in the address. A bit value of 1 means globally unique, and a bit value of 0 means locally unique, so looking at this example, would you say that this address is globally or locally unique? If you answered that it’s globally unique address, you’re right! Trust me, this is going to save you time in addressing your hosts machines because they communicate with the router to make this happen.&lt;/p&gt;

&lt;p&gt;To perform autoconfiguration, a host goes through a basic twi-step process:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;First, the host needs the prefix information (similar to the network portion of an IPv4 address) to configure its interface, so it sends a router solicitation (RS) request for it. This RS is then sent out as a multicast to each router’s multicast address. The actual information being sent is a type of ICMP message, and like everything in networking, this ICMP message has a number that identifies it. The RS message is ICMP type 133.&lt;/li&gt;
  &lt;li&gt;The router answers back with the required prefix information  via a router advertisement (RA). An RA message also happens to be a multicast packet that’s sent to each nod’s multicast address and is ICMP type 134. RA messages are sent on a periodic basis, but the host sends the RS for an immediate response so it doesn’t have to wait until the next scheduled RA to get what it needs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By the way, this type of autoconfiguration is also know as stateless autoconfiguration because it doesn’t contact or connect any further information from the other device.&lt;/p&gt;

&lt;h2 id=&quot;to-be-continued&quot;&gt;To Be Continued&lt;/h2&gt;</content><author><name>Seif-Allah</name></author><category term="Networking" /><category term="Networking," /><category term="IPv6" /><summary type="html">Introduction</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/networking/todo.png" /><media:content medium="image" url="http://localhost:4000/assets/images/networking/todo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Lord Of SQLi : goblin Writeup</title><link href="http://localhost:4000/LOS-goblin/" rel="alternate" type="text/html" title="Lord Of SQLi : goblin Writeup" /><published>2021-01-05T00:00:00+01:00</published><updated>2021-01-05T00:00:00+01:00</updated><id>http://localhost:4000/LOS%20:%20goblin</id><content type="html" xml:base="http://localhost:4000/LOS-goblin/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/writeups/los/goblin.png&quot; style=&quot;  width: 100%; max-width: 600px; height: auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Previous WriteUp&lt;/strong&gt; : &lt;a href=&quot;/ctf-writeup/2021/01/03/LOS-gremlin.html&quot;&gt;gremlin&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;provided-code&quot;&gt;Provided code&lt;/h3&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; 
  &lt;span class=&quot;c1&quot;&gt;//Challenge Preparation&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./config.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;nf&quot;&gt;login_chk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dbconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
  &lt;span class=&quot;c1&quot;&gt;// - - - - - - &lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/prob|_|\.|\(\)/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;No Hack ~_~&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/\'|\&quot;|\`/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;No Quotes ~_~&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;select id from prob_goblin where id='guest' and no=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;hr&amp;gt;query : &amp;lt;strong&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;hr&amp;gt;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mysqli_fetch_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mysqli_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;h2&amp;gt;Hello &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/h2&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'admin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;goblin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;highlight_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;explanation&quot;&gt;Explanation&lt;/h3&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;Challenge preparation&lt;/em&gt;
First of all, it includes this php file called &lt;em&gt;config.php&lt;/em&gt;, then it checks if you are logged in or not. After that, it connect to the database.&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;no field check&lt;/em&gt; 
There’s a double check for the &lt;em&gt;no&lt;/em&gt; field, firstly it checks for :&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;First REGEX explanation&lt;/em&gt;
/prob|_|.|()/i
&lt;strong&gt;1st Alternative prob&lt;/strong&gt;
prob matches the characters prob literally (case insensitive)
&lt;strong&gt;2nd Alternative _&lt;/strong&gt;
_ matches the character _ literally (case insensitive)
&lt;strong&gt;3rd Alternative .&lt;/strong&gt;
. matches the character . literally (case insensitive)
&lt;strong&gt;4th Alternative ()&lt;/strong&gt;
( matches the character ( literally (case insensitive)
) matches the character ) literally (case insensitive)
&lt;strong&gt;Global pattern flags&lt;/strong&gt;
i modifier: insensitive. Case insensitive match (ignores case of [a-zA-Z])&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;Second REGEX explanation&lt;/em&gt;
/'|&quot;|`/i
1st Alternative '
' matches the character ‘ literally (case insensitive)
2nd Alternative &quot;
&quot; matches the character “ literally (case insensitive)
3rd Alternative `
` matches the character ` literally (case insensitive)
Global pattern flags
i modifier: insensitive. Case insensitive match (ignores case of [a-zA-Z])&lt;/p&gt;

&lt;p&gt;Then it executes the final query, and if result id == admin then the problem is solved, else, it returns “Hello {$result[id]}”&lt;/p&gt;

&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;

&lt;p&gt;As mentioned before, we can’t use quotes, but we can use another methods like :&lt;/p&gt;

&lt;h3 id=&quot;substr&quot;&gt;SUBSTR()&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.w3schools.com/sql/func_mysql_substr.asp&quot;&gt;SUBSTR()&lt;/a&gt; function extracts a substring from a string (starting at any position). 
The main idea is that we extract the first character of the id field that matches if it equals 97 (ASCII character of ‘a’).&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;Payload&lt;/em&gt; : /?no=0 or ascii(substr(id,1,1))=97&lt;/p&gt;

&lt;h3 id=&quot;order-by&quot;&gt;ORDER BY&lt;/h3&gt;
&lt;p&gt;If we use this function, SQL will sort data by column according to asc.&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;Payload&lt;/em&gt; : /?no=2 or 1 order by id&lt;/p&gt;

&lt;h3 id=&quot;limit-11&quot;&gt;LIMIT 1,1&lt;/h3&gt;
&lt;p&gt;This function will cut the rows from offset-index to (offset+amount)-index.&lt;/p&gt;

&lt;p&gt;Start of index is 0,0.&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;Payload&lt;/em&gt; : /?no=0 or 1 limit 1,1&lt;/p&gt;

&lt;p&gt;Resources : &lt;a href=&quot;https://portswigger.net/support/sql-injection-bypassing-common-filters&quot;&gt;PortSwigger - Bypassing Common filters&lt;/a&gt;&lt;/p&gt;</content><author><name>Seif-Allah</name></author><category term="CTF-WriteUp" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/writeups/los/goblin.png" /><media:content medium="image" url="http://localhost:4000/assets/images/writeups/los/goblin.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Lord Of SQLi : gremlin Writeup</title><link href="http://localhost:4000/LOS-gremlin/" rel="alternate" type="text/html" title="Lord Of SQLi : gremlin Writeup" /><published>2021-01-03T00:00:00+01:00</published><updated>2021-01-03T00:00:00+01:00</updated><id>http://localhost:4000/LOS%20:%20gremlin</id><content type="html" xml:base="http://localhost:4000/LOS-gremlin/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/writeups/los/sql1.png&quot; style=&quot;  width: 100%; max-width: 600px; height: auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources :&lt;/strong&gt; &lt;a href=&quot;/databases/2020/11/24/SQL-Injection.html&quot;&gt;SQL INJECTION - Introduction&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://los.rubiya.kr/&quot;&gt;‘Lord of SQL Injection’&lt;/a&gt;, a site where you can learn about SQL injection vulnerabilities while capturing dungeons. 
LoS provides 49 stepwise SQLinjection challenges.
Challenges are about SQLinjection at mysql, sqlite, mssql, mongodb, webapp what protected by WAF.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Site origin Country : Korea&lt;/li&gt;
  &lt;li&gt;Language : English&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;gremlin&quot;&gt;Gremlin&lt;/h3&gt;
&lt;p&gt;Given a php code :&lt;/p&gt;
&lt;hr /&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./config.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;login_chk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dbconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/prob|_|\.|\(\)/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;No Hack ~_~&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// do not try to attack another table, database!&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/prob|_|\.|\(\)/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;No Hack ~_~&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;select id from prob_gremlin where id='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' and pw='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;hr&amp;gt;query : &amp;lt;strong&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;hr&amp;gt;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mysqli_fetch_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mysqli_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gremlin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;highlight_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;explanation&quot;&gt;Explanation&lt;/h3&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;Challenge preparation&lt;/em&gt;
First of all, it includes this php file called &lt;em&gt;config.php&lt;/em&gt;, then it checks if you are logged in or not. After that, it connect to the database.&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;The fun begins&lt;/em&gt;
&lt;a href=&quot;https://www.php.net/manual/en/function.preg-match.php&quot;&gt;preg_match&lt;/a&gt; is a php function that performs a regular expression match. If the provided regex found in the &lt;em&gt;id&lt;/em&gt; or &lt;em&gt;pw&lt;/em&gt; fields it exits with “No Hack ~_~” message?&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;em&gt;REGEX explanation&lt;/em&gt;
/prob|_|.|()/i
&lt;strong&gt;1st Alternative prob&lt;/strong&gt;
prob matches the characters prob literally (case insensitive)
&lt;strong&gt;2nd Alternative _&lt;/strong&gt;
_ matches the character _ literally (case insensitive)
&lt;strong&gt;3rd Alternative .&lt;/strong&gt;
. matches the character . literally (case insensitive)
&lt;strong&gt;4th Alternative ()&lt;/strong&gt;
( matches the character ( literally (case insensitive)
) matches the character ) literally (case insensitive)
&lt;strong&gt;Global pattern flags&lt;/strong&gt;
i modifier: insensitive. Case insensitive match (ignores case of [a-zA-Z])&lt;/p&gt;

&lt;p&gt;Then, with the provided &lt;em&gt;id&lt;/em&gt; and &lt;em&gt;pw&lt;/em&gt;, the SQL query is ready to be executed, and it is printed out using the following &lt;em&gt;echo&lt;/em&gt;. 
Using the &lt;a href=&quot;https://www.php.net/manual/en/mysqli-result.fetch-array.php&quot;&gt;mysqli_fetch_array&lt;/a&gt; function, which fetch a result row as an associative, a numeric array, or both.&lt;/p&gt;

&lt;p&gt;Finally, it checks if the id has a value, if it has, the challenge is solved !&lt;/p&gt;

&lt;p&gt;I just want to mention that the &lt;em&gt;id&lt;/em&gt; and &lt;em&gt;pw&lt;/em&gt; field are gonna be passed in the url like this : ?id=
If you’ve read my article mentioned above, you can solve this challenge easily by closing the id field using an apostrophe then executing a condition that returns true as a result like 1=1. 
So the final result will be : 
?id=’ OR 1=1 
Then we need to comment out the &lt;em&gt;pw&lt;/em&gt; field so we insert a double dash followed by a space (Black Space = %20 : URL encoding) or a hashtag(hashtag = %23 : URL encoding )
?id=’ OR 1=1 –%20
So the final query will be  :&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prob_gremlin&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- ' and pw=''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;GREMLIN CLEAR !&lt;/p&gt;</content><author><name>Seif-Allah</name></author><category term="CTF-WriteUp" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/writeups/los/sql1.png" /><media:content medium="image" url="http://localhost:4000/assets/images/writeups/los/sql1.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Java - Data Types</title><link href="http://localhost:4000/Data-Types/" rel="alternate" type="text/html" title="Java - Data Types" /><published>2020-12-28T00:00:00+01:00</published><updated>2020-12-28T00:00:00+01:00</updated><id>http://localhost:4000/Data%20Types</id><content type="html" xml:base="http://localhost:4000/Data-Types/">&lt;p&gt;Java is &lt;em&gt;statically-typed&lt;/em&gt; programming language.&lt;/p&gt;

&lt;p&gt;Data types specify the different sizes and values that be stored in the variable. There are two types of data types in Java :&lt;/p&gt;

&lt;h3 id=&quot;java-primitive-data-types&quot;&gt;Java Primitive Data Types&lt;/h3&gt;

&lt;p&gt;There are 8 types of primitive data types  :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;boolean false&lt;/li&gt;
  &lt;li&gt;byte 0&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;char ‘\u0000’&lt;/td&gt;
          &lt;td&gt;Java uses 2 byte because it uses Unicode system instead of ASCII code system and the \u0000 is the lowest range of unicode system.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;short 0&lt;/li&gt;
  &lt;li&gt;int 0&lt;/li&gt;
  &lt;li&gt;long 0L&lt;/li&gt;
  &lt;li&gt;float 0.0f&lt;/li&gt;
  &lt;li&gt;double 0.0d&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;java-operators&quot;&gt;Java Operators&lt;/h3&gt;

&lt;p&gt;There are many types of operators in Java which are given below :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Unary Operator  (expr++ / expr–&lt;/td&gt;
          &lt;td&gt;++expr / –expr&lt;/td&gt;
          &lt;td&gt;~(bitwise complement) !)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Arithmetic Operator (* / % + -)&lt;/li&gt;
  &lt;li&gt;Shift (The Java left shift operator « is used to shift all of the bits in a value to the left side of a specified number of times.)&lt;/li&gt;
  &lt;li&gt;Relational (Comparison &amp;amp; equality)&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Bitwise (&amp;amp; ^&lt;/td&gt;
          &lt;td&gt;)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;Logical (AND, OR)&lt;/li&gt;
  &lt;li&gt;Ternary ( ? : )&lt;/li&gt;
  &lt;li&gt;Assignment (short + short = int : Compile Time Error -&amp;gt; Solution : TypeCasting)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;unicode-system&quot;&gt;Unicode System&lt;/h3&gt;

&lt;p&gt;Unicode is a universal international standard character encoding that is capable of representing most the world’s written languages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why java uses Unicode system ?&lt;/strong&gt;
Before Unicode, there were many language standards:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ASCII (American Standard Code for Information Interchange) for the United States.&lt;/li&gt;
  &lt;li&gt;ISO 8859-1 for Western European Language.&lt;/li&gt;
  &lt;li&gt;KOI-8 for Russian.&lt;/li&gt;
  &lt;li&gt;GB18030 and BIG-5 for chinese.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This caused two major problems which is :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A particular code value corresponds to different letters in the various language standards.&lt;/li&gt;
  &lt;li&gt;The encodings for languages with large character sets have variable length. Some common characters are encoded as single bytes, other require two or more byte.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The solution for those problems is the Unicode System.
The lowest value : \u0000
The highest value : \uFFFF&lt;/p&gt;

&lt;p&gt;Resources : https://www.javatpoint.com/java-data-types&lt;/p&gt;</content><author><name>Seif-Allah</name></author><category term="Java" /><summary type="html">Java is statically-typed programming language.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/java/oop_concepts.png" /><media:content medium="image" url="http://localhost:4000/assets/images/java/oop_concepts.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Java - JDK, JRE and JVM</title><link href="http://localhost:4000/Difference-between-JDK,-JRE-and-JVM/" rel="alternate" type="text/html" title="Java - JDK, JRE and JVM" /><published>2020-12-28T00:00:00+01:00</published><updated>2020-12-28T00:00:00+01:00</updated><id>http://localhost:4000/Difference%20%20between%20JDK,%20JRE%20and%20JVM</id><content type="html" xml:base="http://localhost:4000/Difference-between-JDK,-JRE-and-JVM/">&lt;p&gt;Notes:&lt;/p&gt;

&lt;p&gt;JVM, JRE, and JDK are platform dependent because the configuration of each OS is different from each other. However Java is platform independent.&lt;/p&gt;

&lt;h4 id=&quot;jvm&quot;&gt;JVM&lt;/h4&gt;
&lt;p&gt;JVM (Java Virtual Machine) is an abstract machine.
It is a specification that provides a runtime environment in Which Java bytecode can be executed.
It can also run those programs which are written in other languages and compiled to Java bytecode.&lt;/p&gt;

&lt;p&gt;JVMs are availbale for many hardware and software platforms.&lt;/p&gt;

&lt;p&gt;The JVM performs the following main tasks :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Loads code&lt;/li&gt;
  &lt;li&gt;Verifies code&lt;/li&gt;
  &lt;li&gt;Executes code&lt;/li&gt;
  &lt;li&gt;Provides runtime environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;jre&quot;&gt;JRE&lt;/h4&gt;
&lt;p&gt;JRE (Java Runtime Environment) is a set of software tools which are used for developing Java applications. It is used to provide the runtime environment. It contains a set of libraries + other files that JVM uses at runtime.&lt;/p&gt;

&lt;h4 id=&quot;jdk&quot;&gt;JDK&lt;/h4&gt;

&lt;p&gt;JDK is an acronym for Java Development Kit. The Java Development Kit is a software development environment which is used to develop Java applications and applets.
It physically exists. It contains JRE + development tools.&lt;/p&gt;

&lt;p&gt;Resources : https://www.javatpoint.com/difference-between-jdk-jre-and-jvm&lt;/p&gt;</content><author><name>Seif-Allah</name></author><category term="Java" /><summary type="html">Notes:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/java/oop_concepts.png" /><media:content medium="image" url="http://localhost:4000/assets/images/java/oop_concepts.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Java - Clickable Pen program</title><link href="http://localhost:4000/First-Java-program/" rel="alternate" type="text/html" title="Java - Clickable Pen program" /><published>2020-12-28T00:00:00+01:00</published><updated>2020-12-28T00:00:00+01:00</updated><id>http://localhost:4000/First%20%20Java%20program</id><content type="html" xml:base="http://localhost:4000/First-Java-program/">&lt;p&gt;Following &lt;a href=&quot;https://www.youtube.com/channel/UC_fFL5jgoCOrwAVoM_fBYwA&quot;&gt;Alex Lee&lt;/a&gt; video about object oriented programming, I wrote this basic OOP program which create a pen as an object and two methods that click and unclick the pen.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/j0lBrYSlYaU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The source can be found in my github directory : &lt;a href=&quot;https://github.com/seifallahhomrani1/Java&quot;&gt;JAVA - OOP&lt;/a&gt;&lt;/p&gt;</content><author><name>Seif-Allah</name></author><category term="Java" /><summary type="html">Following Alex Lee video about object oriented programming, I wrote this basic OOP program which create a pen as an object and two methods that click and unclick the pen.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/java/oop_concepts.png" /><media:content medium="image" url="http://localhost:4000/assets/images/java/oop_concepts.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Java - JVM Architecture</title><link href="http://localhost:4000/JVM-architecture/" rel="alternate" type="text/html" title="Java - JVM Architecture" /><published>2020-12-28T00:00:00+01:00</published><updated>2020-12-28T00:00:00+01:00</updated><id>http://localhost:4000/JVM%20architecture</id><content type="html" xml:base="http://localhost:4000/JVM-architecture/">&lt;p&gt;JVM contains classloader, memory area, execution engine etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/java/jvm-architecture.png&quot; alt=&quot;JVM Architecture&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;classloader&quot;&gt;Classloader&lt;/h3&gt;

&lt;p&gt;Classloader is a subsystem of JVM which is used to load class files. Whenever we run the java program, it is loaded first by the classloader. There are three built-in classloaders in Java.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Bootstrap Class Loader&lt;/strong&gt;: This is the first classloader which is the super class of Extension classloader. It loads the rt.jar file which contains all class files of Java Standard Edition like java.lang package classes, java.net package classes, java.util package classes. java.io package classes, java.sql package classes etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Extension ClassLoader&lt;/strong&gt;: This is the child classloader of Bootstrap and parent classloader of System classloader. It loader the jar files located inside $JAVA_HOME/jre/lib/ext directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;System/Application ClassLoader&lt;/strong&gt;: This is the child classloader of Extension classloader. It loads the classfiles from classpath. By default, classpath is set to current directory. You can change the classpath using ‘-cp’ or ‘-classpath’ switch. It is also know as Application classloader.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Class(Method) Area&lt;/strong&gt;
Class(Method) Area stores per-class structures such as the runtime constant pool, field and method data, the code for methods.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Heap&lt;/strong&gt;
It is the runtime data area in which objects are allocated.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Stack&lt;/strong&gt;
Java Stack stores frames. It holds local variables and partial results, and plays a part in method invocation and return. 
Each thread has a private JVM stack, created at the same time as thread. 
A new frame is created each time a method in invoked. A frame is destroyed when its method invocation completes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Program Counter Register&lt;/strong&gt;
PC (program counter) register contains the address of the Java virtual machine instruction currently being executed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Native Method Stack&lt;/strong&gt;
It contains all the native methods used in the application.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Execution Engine&lt;/strong&gt;
It contains:&lt;/li&gt;
  &lt;li&gt;A virtual processor&lt;/li&gt;
  &lt;li&gt;Interpreter : Read bytecode stream then execute the instructions.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Just-In-Time(JIT) compiler: It is used to improve the performance. JIT compiles parts of the byte code that have similar functionality at the same time, and hence reduces the amount of time needed for compilation. Here, the term “compiler” refers to a translator from the instruction set of a JVM to the instruction set of a specific CPU.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Java Native Interface
Java Native Interface (JNI) is a framework which provides an interface to communicate with another application written in another language like C, C++, Assembly etc. Java uses JNI framework to send output to the Console or interact with OS libraries.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Resources : https://www.javatpoint.com/jvm-java-virtual-machine&lt;/p&gt;</content><author><name>Seif-Allah</name></author><category term="Java" /><summary type="html">JVM contains classloader, memory area, execution engine etc.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/java/oop_concepts.png" /><media:content medium="image" url="http://localhost:4000/assets/images/java/oop_concepts.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>